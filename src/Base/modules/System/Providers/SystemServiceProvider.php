<?php

namespace Xditn\Base\modules\System\Providers;

use Xditn\Base\modules\Common\Events\UploadedEvent;
use Xditn\Base\modules\System\Console\AsyncTask;
use Xditn\Base\modules\System\Console\StatisticsConnectorLog;
use Xditn\Base\modules\System\Console\ConnectorFrequencyWarning;
use Xditn\Base\modules\System\Console\ConnectorLogRecord;
use Xditn\Base\modules\System\Events\ConnectorLogEvent;
use Xditn\Base\modules\System\Listeners\ConnectorLogListener;
use Xditn\Base\modules\System\Listeners\ReportExceptionListener;
use Xditn\Base\modules\System\Listeners\UploadedListener;
use Xditn\Base\modules\System\Support\Configure;
use Xditn\Events\ReportException;
use Xditn\Providers\XditnModuleServiceProvider;

class SystemServiceProvider extends XditnModuleServiceProvider
{
    protected array $commands = [
        AsyncTask::class,                 // 异步任务
        ConnectorLogRecord::class,        // 接口日志消费任务
        ConnectorFrequencyWarning::class, // 接口告警通知
        StatisticsConnectorLog::class,    // 接口日志统计
    ];

    protected array $events = [
        // 异常监听
        ReportException::class => ReportExceptionListener::class,
        // 上传成功事件监听
        UploadedEvent::class => UploadedListener::class,
        // 接口日志记录
        ConnectorLogEvent::class => ConnectorLogListener::class,
    ];

    public function boot(): void
    {
        // 加载动态配置到 Laravel 系统的 Config 中
        (new Configure())->loadToLaravelConfig($this->app->make('config'));
        // 开启接口日志记录
        if (config('xditn.system_api_log')) {
            $this->events[ConnectorLogEvent::class] = ConnectorLogListener::class;
        }
    }

    /**
     * route path
     */
    public function moduleName(): string
    {
        // TODO: Implement path() method.
        return 'system';
    }

    public function configPath(): string
    {
        return parent::configPath(); // TODO: Change the autogenerated stub
    }
}
